pipeline {
  agent any
  environment {
    SCANNER_HOME= tool 'sonar'
    registry = "alanmtzc/devops_project"
    registryCredential = 'docker'
  }
  stages {
    stage('Static Code Analysis') {
      steps {
        sh '''
        echo "${SCANNER_HOME}"
        '''
    /*     withSonarQubeEnv('SonarCloud') {
        sh 'cd ./cidr_convert_api/python/'
        sh '${SCANNER_HOME}/bin/sonar-scanner'
            } */
        }
      }
      stage('Unit Test') {
         steps {  
           echo 'Unit testing'
           sh ''' python3 --version
           cd ./cidr_convert_api/python/
           pip install -r requirements.txt
           python3 tests.py '''
         }
      }
      stage('lint') {
        steps { 
          script {
            try {
              /*  sh '''
               cd ./cidr_convert_api/python/
               pylint *.py 
               ''' */
            } catch (Exception e) {
               echo 'Se ejecuto el linteo pero ocurrio un error: ' + e.toString()
            }
          }
        }
      }
      stage('Build Image') { 
        steps{
          script {
            sh 'pwd'
            dockerImage = docker.build("${registry}", "-f ./cidr_convert_api/python/Dockerfile .") 
          }
        }
      }
      stage('Deploy Image') {
       steps{
         script {
           docker.withRegistry( '', registryCredential ) {
               dockerImage.push()
           }
         }
       }
      }
      stage('Remove Unused docker image') {
        steps{
         sh "docker rmi $registry"
       }
     }
  }
}
